# -*- coding: utf-8 -*-
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: protos/types.proto
# Protobuf Python Version: 5.26.1
"""Generated protocol buffer code."""
from google.protobuf import descriptor as _descriptor
from google.protobuf import descriptor_pool as _descriptor_pool
from google.protobuf import symbol_database as _symbol_database
from google.protobuf.internal import builder as _builder
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()




DESCRIPTOR = _descriptor_pool.Default().AddSerializedFile(b'\n\x12protos/types.proto\x12\x1bVehicleIdentification.Types\"\'\n\x05Image\x12\x0c\n\x04\x64\x61ta\x18\x01 \x02(\x0c\x12\x10\n\x08metadata\x18\x02 \x01(\x0c\"A\n\x03\x42ox\x12\n\n\x02x0\x18\x01 \x02(\x02\x12\n\n\x02y0\x18\x02 \x02(\x02\x12\n\n\x02x1\x18\x03 \x02(\x02\x12\n\n\x02y1\x18\x04 \x02(\x02\x12\n\n\x02id\x18\x05 \x01(\t\"?\n\x0c\x44\x65tectResult\x12/\n\x05\x62oxes\x18\x01 \x03(\x0b\x32 .VehicleIdentification.Types.Box\"\x19\n\tOcrResult\x12\x0c\n\x04text\x18\x01 \x03(\t\"\x1f\n\x0fImgColorsResult\x12\x0c\n\x04text\x18\x01 \x03(\t\"K\n\x15VehicleIdentifyResult\x12\x32\n\x08vehicles\x18\x01 \x03(\x0b\x32 .VehicleIdentification.Types.Box')

_globals = globals()
_builder.BuildMessageAndEnumDescriptors(DESCRIPTOR, _globals)
_builder.BuildTopDescriptorsAndMessages(DESCRIPTOR, 'protos.types_pb2', _globals)
if not _descriptor._USE_C_DESCRIPTORS:
  DESCRIPTOR._loaded_options = None
  _globals['_IMAGE']._serialized_start=51
  _globals['_IMAGE']._serialized_end=90
  _globals['_BOX']._serialized_start=92
  _globals['_BOX']._serialized_end=157
  _globals['_DETECTRESULT']._serialized_start=159
  _globals['_DETECTRESULT']._serialized_end=222
  _globals['_OCRRESULT']._serialized_start=224
  _globals['_OCRRESULT']._serialized_end=249
  _globals['_IMGCOLORSRESULT']._serialized_start=251
  _globals['_IMGCOLORSRESULT']._serialized_end=282
  _globals['_VEHICLEIDENTIFYRESULT']._serialized_start=284
  _globals['_VEHICLEIDENTIFYRESULT']._serialized_end=359
# @@protoc_insertion_point(module_scope)
